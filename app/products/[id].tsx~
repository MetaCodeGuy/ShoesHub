import {  Pressable, SafeAreaView, ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native'
import React, { useEffect, useState } from 'react'
import { router, useLocalSearchParams } from 'expo-router'
import { NewArrivals } from '@/helpers/Datahub'
import { Entypo, EvilIcons, Feather, Ionicons, Octicons } from '@expo/vector-icons'
import AsyncStorage from '@react-native-async-storage/async-storage'

const productinfo = () => {
  const { id } = useLocalSearchParams()
  const [CurrentProduct, setCurrProduct] = useState()
  const [Size, setSize] = useState(0)
  const [CurrentIndex, setCurrentIndex] = useState(0)
  let CartItems = []
  useEffect(() => {
    NewArrivals.map((dat) => {
      if (dat.id === Number(id)) {
        setCurrProduct(dat)
      }
    })
  }, [])

  // const addToCart = (item) => {
  //   AsyncStorage.getItem("cart", (err, result) => {
  //     if (result) {
  //       let cart = JSON.parse(result)
  //       cart.push(item)
  //       AsyncStorage.setItem("cart", JSON.stringify(cart))
  //     }
  //   })
  //   // AsyncStorage.setItem("cart", JSON.stringify([item]))
  // };


  return (
    <SafeAreaView style={{ flex: 1, backgroundColor: 'white' }}>

      <ScrollView
        style={{ flex: 1 }}
      >
        {/* Image Slider */}
        <View style={{
          height: 300,
        }}>


          <Image
            style={{
              width: '100%',
              position: 'absolute',
              top: 0,
              height: "100%",
              borderBottomLeftRadius: 20,
              borderBottomRightRadius: 20
            }}
            source={{ uri: CurrentProduct?.ProductImages[CurrentIndex] }}
          />
          <View style={{
            height: 100,
            paddingHorizontal: 10,
            width: '100%',
            display: 'flex',
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center'
          }}>

            <Pressable
              onPress={() => {
                router.back()
              }}
              style={{
                padding: 10,
                borderRadius: 40,
                backgroundColor: "#fff",
                shadowColor: 'black',
                shadowOffset: {
                  width: 0,
                  height: 2
                },
                shadowOpacity: .3,
                shadowRadius: 4,
              }}>
              <Feather name="arrow-left" size={24} />
            </Pressable>
            {/* 
 <View>

 <Pressable style={{
  padding:10,
  borderRadius:40,
  backgroundColor:"#fff",
  shadowColor:'black',
  shadowOffset:{
    width:0,
    height:2
  },
  shadowOpacity:.3,
  shadowRadius:4,
 }}>
  <Feather name="arrow-left"  size={24} />
 </Pressable>


 <Pressable style={{
  padding:10,
  borderRadius:40,
  backgroundColor:"#fff",
  shadowColor:'black',
  shadowOffset:{
    width:0,
    height:2
  },
  shadowOpacity:.3,
  shadowRadius:4,
 }}>
  <Feather name="arrow-left"  size={24} />
 </Pressable>

 </View> */}

            <Pressable style={{
              padding: 10,
              borderRadius: 40,
              backgroundColor: "#fff",
              shadowColor: 'black',
              shadowOffset: {
                width: 0,
                height: 2
              },
              shadowOpacity: .3,
              shadowRadius: 4,
            }}>
              <Entypo name="dots-three-vertical" size={24} color="black" />
            </Pressable>

          </View>
        </View>
        {/* IMages */}
        <ScrollView
          horizontal
          style={{
            marginVertical: 20
          }}
          showsHorizontalScrollIndicator={false}
        >
          {
            CurrentProduct?.ProductImages.map((imageUrl, index) => {

              return <Pressable
                style={[{
                  marginHorizontal: 5,
                  borderRadius: 20,
                }, CurrentIndex === index ? { borderWidth: 2, borderColor: 'orange' } : {}
                ]}
                onPress={() => {
                  setCurrentIndex(index)
                }}
              >
                <Image
                  source={{ uri: imageUrl }}
                  style={{
                    width: 100,
                    height: 100,
                    borderRadius: 20,
                  }}
                />
              </Pressable>
            })
          }
        </ScrollView>

        {/* product Description */}

        <View style={{
          width: '95%',
          padding: 10,
          alignSelf: 'center',
          backgroundColor: '#8cd5ff',
          borderRadius: 20,
        }}>

          <View style={{
            flexDirection: 'row',
            justifyContent: 'space-between',
            paddingHorizontal: 10,
          }}>
            <Text style={{ fontFamily: 'poppinsbold', color: '#002e99', fontSize: 20 }}>{CurrentProduct?.ProductName}</Text>
            <Text style={{ backgroundColor: '#002e99', fontFamily: 'poppinsbold', paddingVertical: 5, paddingHorizontal: 10, borderRadius: 40, color: 'white' }}>${CurrentProduct?.price}</Text>
          </View>
          <Text style={{ fontFamily: 'poppins', fontSize: 16, paddingVertical: 10, paddingHorizontal: 10, color: '#002e99' }}>
            {CurrentProduct?.Prod_description}
          </Text>

        </View>


        {/* Sizes */}

        <View style={{
          width: '95%',
          backgroundColor: "#ffdaaa",
          padding: 10,
          paddingVertical: 20,
          alignSelf: 'center',
          borderRadius: 20,
          marginTop: 20,
        }}>
          <Text style={{ fontFamily: 'poppinsbold', color: 'orangered' }}>Select Size</Text>
          <ScrollView
          showsHorizontalScrollIndicator={false}
          horizontal
           style={{
            flexDirection: 'row',
            marginTop: 10,

          }}>
            {
              [...new Array(5)].map((num, index) => {
                return <Pressable
                  onPress={() => {
                    setSize(index)
                  }}
                  style={[{
                    borderWidth: 1,
                    borderColor: 'orangered',
                    borderRadius: 15,
                    marginHorizontal: 5,
                    padding: 10
                  }, Size == index ? { backgroundColor: 'orangered' } : {}]}>
                  <Text style={[{ fontFamily: 'poppinsbold', paddingHorizontal: 5, }, Size == index ? { color: 'white' } : { color: 'orangered' }]}>UK {index + 1 * 6}</Text>
                </Pressable>
              })
            }
          </ScrollView>
        </View>


        <View style={{ flexDirection: 'row', justifyContent: 'center', paddingVertical: 10, }}>
          <Pressable 
          onPress={()=>{
            // addToCart(CurrentProduct)
          }}
          style={{
            backgroundColor: 'green',
            padding: 15,
            borderRadius: 100,
          }}>
            <Text style={{ fontFamily: 'poppinsbold', color: "white" }}>Add To Cart</Text>
          </Pressable>
          <Pressable style={{
            backgroundColor: 'green',
            padding: 15,
            marginHorizontal: 10,
            borderRadius: 100,
          }}>
            <Text style={{ fontFamily: 'poppinsbold', color: "white" }}>Buy Now</Text>
          </Pressable>
        </View>

      </ScrollView>

    </SafeAreaView>
  )
}

export default productinfo

const styles = StyleSheet.create({})
